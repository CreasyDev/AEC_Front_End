{"version":3,"sources":["components/albumCard/AlbumCard.js","components/albums/Albums.js","components/albumPage/AlbumPage.js","components/musicPage/MusicPage.js","Main.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["AlbumCard","props","handleAlbumClick","setAlbumPage","albumData","state","showAlbumPage","showAlbumOverLay","bind","showAlbumOverlay","value","this","setState","className","Button","variant","icon","faHeart","inverse","faPlayCircle","faEllipsisH","title","artiste","albumPhotoImageSource","photoSrc","Card","onMouseEnter","onMouseLeave","onClick","Img","src","Body","Title","Text","renderAlbumOverlay","renderAlbumCardContent","React","Component","Albums","albumList","length","albumListContent","map","album","Col","sm","md","Container","fluid","Row","renderBody","AlbumPage","handleMusic","musicIndex","albumTitle","albumPhotoSrc","musicTitle","musics","musicParoles","paroles","setMusicPage","albumYear","year","albumListeningTime","listeningTime","musicsCount","musicsRows","music","index","Image","size","Table","hover","MusicPage","dangerouslySetInnerHTML","__html","defaultProps","initialAlbumList","Main","currentAlbum","currentPage","currentPageName","handleGoBack","pageToShow","pageNameToShow","handleGoNext","handleSearchValue","event","searchValue","target","handleSearch","preventDefault","albumsFound","toUpperCase","filter","RegExp","test","isMakingSearch","Navbar","Form","onSubmit","inline","faChevronLeft","faChevronRight","InputGroup","FormControl","placeholder","aria-label","onChange","roundedCircle","Dropdown","as","ButtonGroup","alignRight","Toggle","split","id","Menu","Item","logout","renderHeader","Login","handleEmail","email","handlePassword","password","handleLogin","e","isLogged","alt","Group","controlId","Control","type","Check","label","renderLoginHeader","renderLoginBody","renderLoginContent","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6acc7f64.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, Button } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHeart, faEllipsisH, faPlayCircle } from '@fortawesome/free-solid-svg-icons'\nimport './styles.css';\n\nclass AlbumCard extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { \n      showAlbumPage: false,\n      showAlbumOverLay: false\n    };\n\n    this.handleAlbumClick = this.handleAlbumClick.bind(this);\n    this.showAlbumOverlay = this.showAlbumOverlay.bind(this);\n  }\n\n  handleAlbumClick = () => {\n    this.props.setAlbumPage(this.props.albumData)\n  }\n\n  showAlbumOverlay (value) {\n    this.setState({showAlbumOverLay : value})\n  }\n\n  renderAlbumOverlay () {\n    return (\n      <div className=\"overlay ablum-actions\">\n        <Button variant=\"outline-dark\" className=\"favorite\">\n          <FontAwesomeIcon className=\"marginRight10px activatedColor\" icon={faHeart} inverse/>\n        </Button> \n        <Button variant=\"outline-dark\" className=\"play\">\n          <FontAwesomeIcon className=\"marginRight10px activatedColor\" icon={faPlayCircle}/>\n        </Button> \n        <Button variant=\"outline-dark\" className=\"more\">\n          <FontAwesomeIcon className=\"activatedColor\" icon={faEllipsisH} inverse/>\n        </Button> \n      </div>\n    )\n  }\n\n  renderAlbumCardContent(){\n    const title = this.props.albumData.title;\n    const artiste = this.props.albumData.artiste;\n    const albumPhotoImageSource = this.props.albumData.photoSrc;\n    const showAlbumOverLay = this.state.showAlbumOverLay;\n\n    return (\n      <div>\n        <Card className=\"album-container cursorPointer\" onMouseEnter={() => this.showAlbumOverlay(true)} onMouseLeave={() => this.showAlbumOverlay(false)} onClick={this.handleAlbumClick}>\n          <Card.Img variant=\"top\" src={albumPhotoImageSource} />\n          <Card.Body className=\"album-body\">\n            <Card.Title>{title}</Card.Title>\n            <Card.Text>{artiste}</Card.Text>\n          </Card.Body>\n          {showAlbumOverLay && this.renderAlbumOverlay()}\n        </Card>\n      </div>\n    )\n  }\n\n  render() {\n    return this.renderAlbumCardContent()\n  }\n}\n\nexport default AlbumCard;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap'\nimport AlbumCard from '../albumCard/AlbumCard'\nimport './styles.css';\n\nclass Albums extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { \n    };\n  }\n\n  renderBody(){\n    const albumList = this.props.albumList;\n    if(albumList.length === 0) {\n      return (\n        <div>\n          <br/>\n          <h3>Aucun resultat trouvé pour votre recherche...</h3>\n        </div>\n      )\n    }\n\n    const albumListContent = albumList.map((album)=> {\n      return ( \n              <Col sm=\"6\" md=\"3\">\n                <AlbumCard albumData = {album} setAlbumPage={this.props.setAlbumPage}/>\n              </Col>\n            )\n    });\n\n    return (\n      <Container fluid>\n        <Row className=\"album-list\">\n          {albumListContent}\n        </Row> \n      </Container>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"albums-container\">\n        {this.renderBody()}\n      </div>\n    )\n  }\n}\n\nexport default Albums;\n","import React from 'react';\nimport { Col, Row, Image, Button, Table } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHeart, faEllipsisH } from '@fortawesome/free-solid-svg-icons'\nimport './styles.css';\n\nclass AlbumPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { \n    };\n    \n    this.handleMusic = this.handleMusic.bind(this);\n  }\n\n  handleMusic (musicIndex) {\n    const album = this.props.albumData;\n    const albumTitle = album.title;\n    const albumPhotoSrc = album.photoSrc;\n    const musicTitle = album.musics[musicIndex].title;\n    const musicParoles = album.musics[musicIndex].paroles;\n\n    this.props.setMusicPage(albumTitle, musicTitle, musicParoles, albumPhotoSrc);\n  }\n\n  render() {\n    const albumData = this.props.albumData;\n    const title = albumData.title;\n    const artiste = albumData.artiste;\n    const albumYear = albumData.year;\n    const albumListeningTime = albumData.listeningTime;\n    const musics = albumData.musics? albumData.musics : [];\n    const musicsCount = albumData.musics ? albumData.musics.length : 0;\n    const albumPhotoImageSource = albumData.photoSrc;\n\n    const musicsRows = musics.map((music, index) => {\n      return (              \n          <tr onClick={() => this.handleMusic(index)} >\n            <td className=\"width60px\">{index +1}</td>\n            <td className=\"width60px\"><FontAwesomeIcon className=\"activatedColor\" icon={faHeart} inverse/></td>\n            <td className=\"textAlighLeft\">{music.title}</td>\n          </tr>\n      )\n    });\n\n    return (\n      <div className=\"album-page-container\">\n        <Row>\n          <Col sm=\"12\" md=\"2\">\n            <Image src={albumPhotoImageSource} className=\"album-page-img\"/>\n          </Col>\n          <Col sm=\"12\" md=\"10\">\n            <div className=\"album-infos\">\n              <span>ALBUM</span>\n              <h1>{title}</h1>\n              <span>Par <strong className=\"\">{artiste}</strong></span>\n              <label>{albumYear} . {musicsCount} chansons, {albumListeningTime} min</label>\n              <div className=\"album-actions\">\n                  <Button variant=\"success\" size=\"sm\" className=\"play-btn\">\n                    LECTURE\n                  </Button>\n                  <Button variant=\"outline-dark\" className=\"round-btn\">\n                    <FontAwesomeIcon className=\"marginRight10px activatedColor\" icon={faHeart} inverse/>\n                  </Button> \n                  <Button variant=\"outline-dark\" className=\"round-btn\">\n                    <FontAwesomeIcon className=\"marginRight10px activatedColor\" icon={faEllipsisH} inverse/>\n                  </Button>               \n              </div>              \n            </div>\n          </Col>\n        </Row>\n        <Row className=\"music-list-container\">\n          <Table hover variant=\"dark\" className=\"music-list-container\">\n                <thead>\n                <tr>\n                    <th className=\"width60px\">#</th>\n                    <th className=\"width60px\"></th>\n                    <th className=\"textAlighLeft\">TITRE</th>\n                </tr>\n                </thead>\n                <tbody>\n                {musicsRows}\n                </tbody>\n          </Table>\n        </Row>\n      </div>\n    )\n  }\n}\n\nexport default AlbumPage;\n","import React from 'react';\nimport { Col, Row, Image} from 'react-bootstrap'\nimport './styles.css';\n\nclass MusicPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"album-page-container\">\n        <Row>\n          <Col sm=\"12\" md=\"2\">\n            <Image src={this.props.albumPhotoSrc} className=\"album-page-img\"/>\n          </Col>\n          <Col sm=\"12\" md=\"10\">\n            <div className=\"album-infos\">\n              <span>ALBUM</span>\n              <h1>{this.props.albumTitle}</h1>\n              <span>CHANSON</span>\n              <h4>{this.props.musicTitle}</h4>\n            </div>\n          </Col>\n        </Row>\n        <Row className=\"music-list-container\">\n          <Col sm=\"12\" md=\"5\">\n           <p dangerouslySetInnerHTML={{__html: this.props.musicParoles}}/>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nMusicPage.defaultProps = {\n  musicParoles: 'Aucunes paroles trouvées pour cette chanson'\n};\n\nexport default MusicPage;\n","import React from 'react';\nimport { Form, Navbar, InputGroup, FormControl, Image, Dropdown, ButtonGroup } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons'\nimport Albums from './components/albums/Albums'\nimport AlbumPage from './components/albumPage/AlbumPage';\nimport MusicPage from './components/musicPage/MusicPage';\n\nconst initialAlbumList = [\n    {\n        title:'RAIGN',\n        artiste:'Rachel Rabin',\n        year: '2018',\n        listeningTime: 20,\n        musics:[\n            {   \n                title: \"When It's All Over\",\n                paroles: \"Deep into the darkness<br/>We all got lost Caught out in the rain storm<br/>Bullets falling fast<br/>Calling to the afterlife Can you hear us when we cry<br/>Call out to the afterlife<br/>Can you show us how to fight<br/> It's all gone wrong<br/>Heaven hold us<br/> We've lost the sun<br/>Heaven told us <br/> The world was strong <br/>Heaven hold us\" \n            },\n            {\n                title: \"Kiss Me a Thousand Times\",\n            },\n            {\n                title: \"Walk on Fire\",\n            },\n            {\n                title: \"Heaven Help Me\",\n            },\n            {\n                title: \"Shine\",\n            },\n            {\n                title: \"Don't Let Me Go - Acoustic\",\n            },\n        ],\n        photoSrc:'assets/img/album-photos/RachelRabin.jpg',\n    },\n    {\n        title:'Spirit',\n        artiste:'Khalid',\n        year: '2010',\n        listeningTime: 89,\n        musics:[\n            {\n                title: \"Better\",\n                paroles: \"Love to see you shine in the night like the diamond you are<br/> (Love to see you shine in the night like the diamond you are).<br/> I'm on the other side, it's alright,<br/> just hold me in the dark <br/> (I'm on the other side, it's alright, just hold me in the dark)<br/> No one's got to know what we do, hit me up when you're bored<br/> (No one's got to know)<br/> Nah (what we do, hit me up when you're bored)<br/> Cause I live down the street, so we meet when you need it,<br/> it's yours All I hear is<br/> Nothin feels better than this<br/> Nothin feels better<br/> Nothin feels better than this<br/> Nothin feels better, no, no<br/> We don't gotta hide<br/> This is what you like, I admit<br/> Nothin feels better than this<br/> You say we're just friends but I swear when nobody's around<br/> You say we're just friends but I swear when…\",\n            },\n            {\n                title: \"Bad Luck\",\n            },\n            {\n                title: \"My Bad\",\n            },\n            {\n                title: \"Intro\",\n            },\n            {\n                title: \"Talk\",\n            },\n            {\n                title: \"Right Back\",\n            },\n            {\n                title: \"Don't Pretend (featuring Safe)\",\n            },\n            {\n                title: \"Paradise\",\n            },\n            {\n                title: \"Hundred\",\n            },\n            {\n                title: \"Outta My Head (with John Mayer)\",\n            },\n            {\n                title: \"Free Spirit\",\n            },\n            {\n                title: \"Twenty One\",\n            },\n            {\n                title: \"Bluffin\",\n            },\n            {\n                title: \"Self\",\n            },\n            {\n                title: \"Alive\",\n            },\n            {\n                title: \"Heaven\",\n            },\n            {\n                title: \"Saturday Nights (bonus track)\",\n            }\n        ],\n        photoSrc:'assets/img/album-photos/Khalid.jpg',\n    },\n    {\n        title:'True Romance',\n        artiste:'Estelle',\n        year: '2014',\n        listeningTime: 108,\n        musics:[\n            {\n                title: \"Time After Time\",\n            },\n            {\n                title: \"Conqueror\",\n            },\n            {\n                title: \"Something Good\",\n            },\n            {\n                title: \"Make Her Say\",\n            },\n            {\n                title: \"Time Share\",\n            },\n            {\n                title: \"The Same\",\n            },\n            {\n                title: \"Fight for It\",\n            },\n            {\n                title: \"Silly Girls\",\n            },\n            {\n                title: \"Gotcha Love\",\n            },\n            {\n                title: \"She Will Love\",\n            },\n            {\n                title: \"All That Matters\",\n            }\n        ],\n        photoSrc:'assets/img/album-photos/Estelle.jpg'\n    },\n    {\n        title:'PHOENIX',\n        artiste:'Rita Ora',\n        year: '2014',\n        listeningTime: 108,\n        musics:[\n            {   \n                title: \"Anywhere\",\n            },\n            {\n                title: \"Let You Love Me\",\n            },\n            {\n                title: \"New Look\",\n            },\n            {\n                title: \"Lonely Together\",\n            },\n            {\n                title: \"Your Song\",\n            },\n            {\n                title: \"Only Want You\",\n            },\n            {\n                title: \"First Time High\",\n            },\n            {\n                title: \"For You\",\n            },\n            {\n                title: \"Summer Love\",\n            },\n            {\n                title: \"Girls\",\n            },\n            {\n                title: \"Keep Talking\",\n            },\n            {\n                title: \"Hell of a Life\",\n            }\n        ],\n        photoSrc:'assets/img/album-photos/RitaOra.jpg',\n    },\n    {\n        title:'Love in the Future',\n        artiste:'John Legend',\n        year: '2014',\n        listeningTime: 188,\n        musics:[\n            {   \n                title: \"Love in the Future (Intro)\",\n            },\n            {\n                title: \"The Beginning...\",\n            },\n            {\n                title: \"Open Your Eyes\",\n            },\n            {\n                title: \"Made to Love\",\n            },\n            {\n                title: \"Who Do We Think We Are (featuring Rick Ross)\",\n            },\n            {\n                title: \"All of Me\",\n            },\n            {\n                title: \"Hold on Longer\",\n            },\n            {\n                title: \"Save the Night\",\n            },\n            {\n                title: \"Tomorrow\",\n            },\n            {\n                title: \"What If I Told You? (Interlude)\",\n            },\n            {\n                title: \"Dreams\",\n            },\n            {\n                title: \"Wanna Be Loved\",\n            },\n            {\n                title: \"Angel (Interlude) (featuring Stacy Barthe)\",\n            },\n            {\n                title: \"You & I (Nobody in the World)\",\n            },\n            {\n                title: \"Asylum\",\n            },\n            {\n                title: \"Caught Up\",\n            }\n        ],\n        photoSrc:'assets/img/album-photos/JohnLegend.jpg',\n    },\n    {\n        title:'En vérité',\n        artiste:'Isabelle Boulay',\n        year: '2009',\n        listeningTime: 237,\n        musics:[\n            {   \n                title: \"Mon amour (la supplique)\",\n            },\n            {\n                title: \"Tout sera pardonné\",\n            },\n            {\n                title: \"Won't Catch Me Cryin\",\n            },\n            {\n                title: \"La route avec lui\",\n            },\n            {\n                title: \"Nashville\",\n            },\n            {\n                title: \"Una storia d'amore\",\n            },\n            {\n                title: \"Un souvenir\",\n            },\n            {\n                title: \"Le garçon triste\",\n            },\n            {\n                title: \"Toi moi nous\",\n            },\n            {\n                title: \"Voir la mer\",\n            },\n            {\n                title: \"Les mains d'or\",\n            },\n            {\n                title: \"En vérité\",\n            },\n            {\n                title: \"Le train d'après\",\n            },\n            {\n                title: \"Guerre civile\",\n            }\n        ],\n        photoSrc:'assets/img/album-photos/IsabelleBoulay.jpg',\n    }\n];\n\nclass Main extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { \n            currentPageName: \"Albums\",\n            currentPage: \"albums\",\n            currentAlbum: null,\n            albumTitle: null,\n            musicTitle: null,\n            musicParoles: null,\n            albumPhotoSrc: null,\n            searchValue: null,\n            isMakingSearch: false,\n            albumList: initialAlbumList\n        };\n\n        this.setAlbumPage = this.setAlbumPage.bind(this);\n        this.setMusicPage = this.setMusicPage.bind(this);\n        this.handleGoBack = this.handleGoBack.bind(this);\n        this.handleGoNext = this.handleGoNext.bind(this);\n        this.handleSearchValue = this.handleSearchValue.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n    }\n\n    setAlbumPage = (album) => {\n        this.setState({\n            currentAlbum : album,\n            currentPage : 'album-page',\n            currentPageName: 'Album',\n        }) \n    }\n\n    setMusicPage = (albumTitle, musicTitle, musicParoles, albumPhotoSrc) => {\n        this.setState({\n            albumTitle:albumTitle,\n            musicTitle:musicTitle,\n            musicParoles:musicParoles,\n            albumPhotoSrc:albumPhotoSrc,\n            currentPage : 'music-page',\n            currentPageName: 'Chanson' \n        })\n    }\n\n    handleGoBack = () => {\n        // On gère la bonne page à afficher lors du click sur le button retour\n        const currentPage = this.state.currentPage; \n        let pageToShow = this.state.currentPage;\n        let pageNameToShow = this.state.currentPageName;\n        if(currentPage === \"album-page\") {\n            pageToShow = \"albums\";\n            pageNameToShow = \"Albums\";           \n        } else if(currentPage === \"music-page\") {\n            pageToShow = \"album-page\";\n            pageNameToShow = \"Album\";\n        } \n\n        this.setState({\n            currentPage: pageToShow,\n            currentPageName: pageNameToShow\n        }) \n    }\n\n    handleGoNext = () => {\n        // rien à faire dans le contexte de ce TP\n    }\n\n    handleSearchValue = (event) => {\n        this.setState({searchValue : event.target.value})\n    }\n\n    handleSearch = (event) => {\n        event.preventDefault();\n        let searchValue = this.state.searchValue;\n        let albumsFound = initialAlbumList;\n        if(searchValue) {\n            searchValue = searchValue.toUpperCase();\n            albumsFound = initialAlbumList.filter(album => RegExp(searchValue).test(album.title.toUpperCase()) || RegExp(searchValue).test(album.artiste.toUpperCase()));\n        }\n\n        this.setState({\n            albumList: albumsFound\n        })\n    } \n\n    renderHeader(){\n        return (\n            <div className=\"albums-header\">\n                <Navbar className=\"justify-content-between \">\n                <Form onSubmit={this.handleSearch} inline>\n                    <FontAwesomeIcon className=\"marginRight10px activatedColor cursorPointer\" icon={faChevronLeft} onClick={this.handleGoBack} inverse/>\n                    <FontAwesomeIcon className=\"marginLeft10px notActivatedColor cursorPointer\" icon={faChevronRight} onClick={this.handleGoNext} />\n                    <InputGroup className=\"search-album-container\">\n                    <FormControl\n                        placeholder=\"Rechercher\"\n                        aria-label=\"Rechercher\"\n                        onChange= {this.handleSearchValue}\n                    />\n                    </InputGroup>\n                </Form>\n                <Form className=\"user-profil\" inline>\n                    <Image src=\"assets/img/user-profil-photo.jpg\" roundedCircle />\n                    <Navbar.Text>\n                        Franck\n                    </Navbar.Text>\n                    <Dropdown as={ButtonGroup} alignRight>\n                    <Dropdown.Toggle split id=\"dropdown-split-basic\" className=\"userProfileActions\"/>\n                    <Dropdown.Menu>\n                        <Dropdown.Item onClick={this.props.logout}>Déconnexion</Dropdown.Item>\n                    </Dropdown.Menu>\n                    </Dropdown>\n                </Form>\n                </Navbar>\n                <div className=\"albums-header-title\">\n                <h1>{this.state.currentPageName}</h1>\n                </div>\n            </div>\n        )\n    }\n\n    renderBody(){\n        // On retourne la page appropriée à afficher\n        const currentPage = this.state.currentPage;\n        if(currentPage === \"albums\" ) {\n            return <Albums albumList = {this.state.albumList} setAlbumPage={this.setAlbumPage}/>\n        } else if(currentPage === \"album-page\"){\n            return <AlbumPage setMusicPage={this.setMusicPage} albumData={this.state.currentAlbum}/>\n        } else if(currentPage === \"music-page\"){\n            return <MusicPage albumTitle={this.state.albumTitle} musicTitle={this.state.musicTitle} musicParoles={this.state.musicParoles} albumPhotoSrc={this.state.albumPhotoSrc}/>\n        } \n    }\n\n    render() {\n        return (\n            <div className=\"albums-container\">\n                {this.renderHeader()}\n                <div className=\"whiyteLineSeparator\"></div>\n                {this.renderBody()}\n            </div>\n        )\n    }\n}\n\nexport default Main;\n","import React from 'react';\nimport { Container, Form, Button } from 'react-bootstrap'\nimport Main from './Main'\nimport './login.css';\n\nclass Login extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { \n      email: null,\n      password: null,\n      isLogged:false\n    };\n\n    this.handleEmail = this.handleEmail.bind(this);\n    this.handlePassword = this.handlePassword.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  handleEmail = (event) => {\n    this.setState({email : event.target.value});\n  }\n\n  handlePassword = (event) => {\n    this.setState({password : event.target.value});\n  }\n\n  handleLogin = (e) => {\n    e.preventDefault()\n    const email = this.state.email;\n    const password = this.state.password;\n    if(email === 'franck@gmail.com' && password === 'patate'){\n      this.setState({isLogged:true})\n    }\n  }\n\n  logout = () => {\n    this.setState({isLogged : false});\n  }\n\n  renderLoginHeader(){\n    return (\n      <div className=\"login-header\">\n        <img className=\"spotify-logo\" src=\"assets/img/Spotify_Logo_RGB_White.png\" alt=\"spotify-logo\"/>\n        <h3>De la musique pour tous.</h3>\n      </div> \n    )\n  }\n\n  renderLoginBody(){\n    return (\n      <Form className=\"login-form\" onSubmit={this.handleLogin}>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Control type=\"email\" placeholder=\"Adresse courriel ou nom d'utilisateur\" onChange={this.handleEmail}/>\n        </Form.Group>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Control type=\"password\" placeholder=\"Mot de passe\" onChange={this.handlePassword}/>\n        </Form.Group>\n        <Form.Group controlId=\"formBasicCheckbox\">\n          <Form.Check type=\"checkbox\" label=\"Garder ma session ouverte\" className=\"form-check-label\"/>\n        </Form.Group>\n        <Button size=\"lg\" type=\"submit\" onClick={this.handleLogin}>\n          SE CONNECTER\n        </Button>\n      </Form> \n    )\n  }\n\n  renderLoginContent(){\n    return (\n      <Container className=\"login\">\n        {this.renderLoginHeader()}\n        {this.renderLoginBody()}\n      </Container>\n    )\n  }\n\n  render() {\n    const isLogged = this.state.isLogged;\n    if(isLogged) {\n      return <Main logout={this.logout}/>\n    } else {\n      return this.renderLoginContent()\n    }\n  }\n}\n\nexport default Login;\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Login from './Login';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Login/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}