{"version":3,"sources":["components/NavigationBar.js","components/Footer.js","components/Accueil/Accueil.js","config/config.js","services/plats.js","components/Plats/PlatCard.js","components/Plats/List.js","components/Plats/PlatDetail.js","components/Plats/PlatForm.js","Routage.js","App.js","serviceWorker.js","index.js"],"names":["NavigationBar","Navbar","bg","variant","expand","Brand","href","className","alt","Toggle","aria-controls","Collapse","Nav","Link","Button","Footer","interp","i","r","Math","sin","PI","PlatsDuJourList","id","nom","description","prix","photoSrc","PlatDuJourCard","props","data","platData","Card","Img","src","Body","Title","Text","onClick","toast","info","position","POSITION","TOP_RIGHT","Accueil","radians","useSpring","to","next","a","from","config","duration","reset","length","platListContent","map","plat","Col","sm","md","div","key","style","transform","interpolate","Carousel","Item","Caption","Container","fluid","Row","url","PlatApiService","obtenirTousLesPlats","axios","get","obtenirUnPlat","platId","ajouterNouveauPlat","post","modifierPlat","put","supprimerPlat","delete","configure","PlatCard","useState","isPlatDeleted","platDeleteSet","lg","xl","photoUrl","_id","success","error","console","handleDelete","List","platList","platListSet","location","useLocation","useEffect","platListResult","listDesPlats","PlatDetail","useParams","platDataSet","platDetailResult","platDetail","dangerouslySetInnerHTML","__html","ingredientsList","preparationRecette","PlatForm","setFormValidated","isValidated","setState","isFormValidated","handleNomPlat","e","target","value","handleDescriptionPlat","handleIngredientsPlat","handlePreparationPlat","handlePhotoUrlPlat","handleSubmit","preventDefault","stopPropagation","state","statusMessage","isPlatCreatedOrUpdated","bind","this","match","params","Form","noValidate","validated","onSubmit","Group","controlId","Label","Control","required","type","name","placeholder","onChange","Feedback","as","rows","size","renderFormHeader","renderFormBody","renderFormContent","React","Component","withRouter","Routage","exact","path","component","PlatsList","App","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c36169ab.chunk.js","sourcesContent":["import React from \"react\";\nimport { Navbar, Nav, Button } from \"react-bootstrap\";\n\nfunction NavigationBar() {\n  return (\n    <>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n        <Navbar.Brand href=\"/\">\n          <img className=\"app-logo\" alt=\"Les saveurs jamaicaines logo\" />\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse>\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"#link\">\n              <Button\n                href=\"/nos-plats\"\n                variant=\"outline-warning\"\n                className=\"py-1\"\n              >\n                Toutes nos spécialités\n              </Button>\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </>\n  );\n}\n\nexport default NavigationBar;\n","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <footer>\n      <p className=\"m-0 text-center copyRight\">\n        Copyright © Saveurs jamaicaines 2020\n      </p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport { Carousel, Card, Button, Col, Container, Row } from \"react-bootstrap\";\nimport { useSpring, animated } from \"react-spring\";\nimport { toast } from \"react-toastify\";\nimport \"./styles/accueil.scss\";\n\nconst interp = (i) => (r) =>\n  `translate3d(0, ${0.625 * Math.sin(r + i * Math.PI)}rem, 0)`;\n\nconst PlatsDuJourList = [\n  {\n    id: 1,\n    nom: \"Ragoût de Boeuf\",\n    description:\n      \"Le ragoût de boeuf de grand-maman à la jamaïcaine. Un plat réconfortant, cuisiné avec amour. C'est le meilleur !\",\n    prix: 19.15,\n    photoSrc: \"../../assets/img/plats/ragoutBoeuf.jpg\",\n  },\n  {\n    id: 2,\n    nom: \"Crevette Rasta\",\n    description:\n      \"La meilleur crevette Rasta à notre façon ! Rien de mieux que des crevettes au barbecue pour vous regaler en famille.\",\n    prix: 20.99,\n    photoSrc: \"../../assets/img/plats/crevetteRasta.jpg\",\n  },\n  {\n    id: 3,\n    nom: \"Poulet Kingston\",\n    description:\n      \"Cuisiné à base d'une grande variété d'épices des îles, le poulet à la Jamaïcaine est l’un des plats les plus populaires.\",\n    prix: 23.25,\n    photoSrc: \"../../assets/img/plats/pouletKingston.jpg\",\n  },\n  {\n    id: 4,\n    nom: \"Sauté d'écrevisses Jamaïcains\",\n    description:\n      \"Appellé aussi 'Zion Crawfish', son goût frais, fluviale et ses épices colorées stimuleront vos papilles. Que du bonheur !\",\n    prix: 12.99,\n    photoSrc: \"../../assets/img/plats/ecrevisses.jpg\",\n  },\n  {\n    id: 5,\n    nom: \"Curry de Poisson Séché\",\n    description:\n      \"Le goût, la saveur du poisson ainsi que l'onctuosité de la sauce au curry en font la spécialité favorite des Jamaïcains.\",\n    prix: 23.15,\n    photoSrc: \"../../assets/img/plats/Poisson-Curry.jpg\",\n  },\n  {\n    id: 6,\n    nom: 'Chèvre en Ragoût \"Jah Love\"',\n    description:\n      \"Voici un plat traditionnel des plaines de Montego Bay. Il est agrémenté d'une sauce aux 10 épices et aux piments rouges.\",\n    prix: 8.99,\n    photoSrc: \"../../assets/img/plats/chevre-Ragout.jpg\",\n  },\n];\n\nfunction PlatDuJourCard(props) {\n  const data = props.platData;\n\n  function gererCommande() {\n    toast.info(\n      \"Désolé! limite de commandes maximale atteint pour aujourd'hui.\",\n      {\n        position: toast.POSITION.TOP_RIGHT,\n      }\n    );\n  }\n  return (\n    <Card className=\"mt-4\">\n      <Card.Img variant=\"top\" src={data.photoSrc} alt={data.nom} />\n      <Card.Body className=\"background_grey_dark_color plat-du-jour-content\">\n        <Card.Title className=\"green_color\">{data.nom}</Card.Title>\n        <Card.Text className=\"gray_white_color\">{data.description}</Card.Text>\n        <Card.Text className=\"yellow_color price\">{data.prix} $</Card.Text>\n        <Button\n          variant=\"outline-secondary orderBtn\"\n          onClick={() => gererCommande()}\n        >\n          Commander\n        </Button>\n      </Card.Body>\n    </Card>\n  );\n}\n\nfunction Accueil() {\n  const { radians } = useSpring({\n    to: async (next) => {\n      while (1) await next({ radians: 2 * Math.PI });\n    },\n    from: { radians: 0 },\n    config: { duration: 3500 },\n    reset: true,\n  });\n\n  if (PlatsDuJourList.length === 0) {\n    return (\n      <div>\n        <br />\n        <h3>Aucun plat populaire disponible pour le moment </h3>\n      </div>\n    );\n  }\n\n  const platListContent = PlatsDuJourList.map((plat, i) => {\n    return (\n      <Col sm=\"6\" md=\"4\">\n        <animated.div\n          key={i}\n          className=\"script-bf-box\"\n          style={{ transform: radians.interpolate(interp(i)) }}\n        >\n          <PlatDuJourCard key={i} platData={plat} />\n        </animated.div>\n      </Col>\n    );\n  });\n\n  return (\n    <>\n      <Carousel className=\"\">\n        <Carousel.Item className=\"position-relative\">\n          <img\n            className=\"d-block w-100\"\n            src=\"../../assets/img/header-bg/bg1.jpg\"\n            alt=\"Les meilleurs délices à la jamaïcaine\"\n          />\n          <Carousel.Caption className=\"captionTitle position-absolute p-0\">\n            <h2 className=\"h2Carousel\">Les Délices Exotiques Jamaïcains</h2>\n            <h4 className=\"subTitle d-none d-md-block d-lg-block\">\n              Vous en Aurez pour vos Papilles\n            </h4>\n          </Carousel.Caption>\n        </Carousel.Item>\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src=\"../../assets/img/header-bg/bg2.jpg\"\n            alt=\"Saveurs jamaicaines\"\n          />\n          <Carousel.Caption className=\"captionTitle position-absolute p-0\">\n            <h2 className=\"h2Carousel\">Saveurs Jamaïcaines</h2>\n            <h4 className=\"subTitle d-none d-md-block d-lg-block\">\n              La Meilleure des Cuisines Caraïbéennes\n            </h4>\n          </Carousel.Caption>\n        </Carousel.Item>\n      </Carousel>\n      <div className=\"container plats-populaires-conteneur\">\n        <br />\n        <h2>Les plats du jour</h2>\n        <hr />\n        <Container fluid>\n          <Row className=\"album-list\">{platListContent}</Row>\n        </Container>\n        <hr />\n        <Button variant=\"outline-secondary\" href=\"/nos-plats\">\n          VOIR NOS AUTRES PLATS\n        </Button>\n      </div>\n    </>\n  );\n}\n\nexport default Accueil;\n","const config = {\n  url: \"https://crudcrud.com/api/1154f245945749f4990ef0a274da3aa6\",\n};\nexport default config;\n","import config from \"../config/config\";\nimport axios from \"axios\";\n\nconst PlatApiService = {\n  // retourner tous les plats\n  async obtenirTousLesPlats() {\n    return await axios.get(config.url + \"/plat\");\n  },\n\n  // obtenir un plat\n  async obtenirUnPlat(platId) {\n    return await axios.get(config.url + \"/plat/\" + platId);\n  },\n\n  // ajouter un nouveau plat\n  ajouterNouveauPlat(platData) {\n    return axios.post(config.url + \"/plat\", platData);\n  },\n\n  // modifier un plat\n  modifierPlat(platId, platData) {\n    return axios.put(config.url + \"/plat/\" + platId, platData);\n  },\n\n  // supprimer un plat\n  supprimerPlat(platId) {\n    return axios.delete(config.url + \"/plat/\" + platId);\n  },\n};\n\nexport default PlatApiService;\n","import React, { useState } from \"react\";\nimport { Button, Col, Row } from \"react-bootstrap\";\nimport { Redirect } from \"react-router\";\nimport { toast } from \"react-toastify\";\nimport PlatApiService from \"../../services/plats\";\nimport \"./styles/plat.scss\";\n\ntoast.configure();\n\nfunction PlatCard(props) {\n  const plat = props.platData;\n  const [isPlatDeleted, platDeleteSet] = useState(false);\n\n  function handleDelete(platId) {\n    try {\n      PlatApiService.supprimerPlat(platId);\n      toast.success(\"Plat supprimé avec succès!\", {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      platDeleteSet(true);\n    } catch (error) {\n      console.error(\"error : \" + error);\n      toast.error(\n        \"Error lors de la suppression du plat! Veuillez recommencer svp.\",\n        {\n          position: toast.POSITION.TOP_RIGHT,\n        }\n      );\n      platDeleteSet(false);\n    }\n  }\n\n  if (isPlatDeleted) return <Redirect to=\"/nos-plats\" />;\n  return (\n    <Row className=\"plat-carte-container\">\n      <Col sm=\"12\" md=\"12\" lg=\"4\" xl=\"4\" className=\"plat-image\">\n        <img src={plat.photoUrl} alt={plat.nom} />\n      </Col>\n      <Col sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\" className=\"plat-infos\">\n        <h3>{plat.nom}</h3>\n        <hr className=\"bg-hr\" />\n        <p>{plat.description}</p>\n      </Col>\n      <Col sm=\"12\" md=\"12\" lg=\"1\" xl=\"2\" className=\"actions-btn pt-md-4 pt-lg-4\">\n        <Button variant=\"outline-success\" href={\"/plat/\" + plat._id}>\n          Voir plus\n        </Button>\n        <Button variant=\"outline-warning\" href={\"/modifier-plat/\" + plat._id}>\n          Modifier\n        </Button>\n        <Button variant=\"outline-danger\" onClick={() => handleDelete(plat._id)}>\n          Supprimer\n        </Button>\n      </Col>\n    </Row>\n  );\n}\n\nexport default PlatCard;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Col, Row } from \"react-bootstrap\";\nimport { useLocation } from \"react-router-dom\";\nimport PlatCard from \"./PlatCard\";\nimport PlatApiService from \"../../services/plats\";\nimport \"./styles/plat.scss\";\n\n// liste des plats\nfunction List() {\n  const [platList, platListSet] = useState([]);\n  const location = useLocation();\n  useEffect(() => {\n    async function listDesPlats() {\n      const platListResult = await PlatApiService.obtenirTousLesPlats();\n      platListSet(platListResult.data);\n    }\n\n    try {\n      listDesPlats();\n    } catch (error) {\n      console.error(\"error : \" + error);\n    }\n  }, [location.key]);\n\n  if (platList.length === 0) {\n    return (\n      <div className=\"text-center\">\n        <br />\n        <h3>Aucun plat trouvé pour le moment </h3>\n      </div>\n    );\n  }\n\n  const platListContent = platList.map((plat, i) => {\n    return <PlatCard key={i} platData={plat} />;\n  });\n\n  return (\n    <div className=\"container plat-carte-list-container\">\n      <Row>\n        <Col sm=\"12\" md=\"9\">\n          <h2>Nos Spécialités</h2>\n        </Col>\n        <Col sm=\"12\" md=\"3\" className=\"actions-btn\">\n          <Button variant=\"outline-secondary\" href=\"/ajouter-plat\">\n            Ajouter un plat\n          </Button>\n        </Col>\n      </Row>\n      <hr />\n      <div className=\"plat-carte-list-container\">{platListContent}</div>\n    </div>\n  );\n}\n\nexport default List;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Col, Row } from \"react-bootstrap\";\nimport PlatApiService from \"../../services/plats\";\nimport { useParams } from \"react-router-dom\";\nimport \"./styles/plat.scss\";\n\n// page detail du plat\nfunction PlatDetail() {\n  const { id } = useParams();\n  const platId = id;\n  const [platData, platDataSet] = useState(null);\n  useEffect(() => {\n    async function platDetail() {\n      const platDetailResult = await PlatApiService.obtenirUnPlat(platId);\n      platDataSet(platDetailResult.data);\n    }\n\n    try {\n      platDetail();\n    } catch (error) {\n      console.error(\"error : \" + error);\n    }\n  });\n\n  if (platData === null) {\n    return (\n      <div className=\"text-center\">\n        <br />\n        <h3>Aucun detail trouvé pour ce plat! Veuillez recharger la page </h3>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container plat-carte-list-container pb-5\">\n      <Row>\n        <Col sm=\"12\" md=\"9\">\n          <h2>{platData.nom}</h2>\n        </Col>\n        <Col sm=\"12\" md=\"3\" className=\"actions-btn\">\n          <Button\n            variant=\"outline-secondary\"\n            href={\"/modifier-plat/\" + platData._id}\n          >\n            Modifier\n          </Button>\n        </Col>\n      </Row>\n      <hr />\n      <Row className=\"plat-detail-container\">\n        <Col sm=\"12\" md=\"4\" className=\"plat-infos\">\n          <img src={platData.photoUrl} alt={platData.nom} />\n        </Col>\n        <Col sm=\"12\" md=\"8\" className=\"plat-infos\">\n          <p>{platData.description}</p>\n\n          <div className=\"text-center background_gradient py-2 mb-3\">\n            <h4 className=\"text-center text-light\">\n              Vous aimeriez préparer ce plat chez vous ?{\" \"}\n            </h4>\n          </div>\n\n          <h5>Liste des ingrédients :</h5>\n          <div\n            className=\"\"\n            dangerouslySetInnerHTML={{ __html: platData.ingredientsList }}\n          ></div>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col sm=\"12\" md=\"12\" className=\"recette-infos\">\n          <hr />\n          <h5>Préparation de la recette :</h5>\n          <div\n            className=\"\"\n            dangerouslySetInnerHTML={{ __html: platData.preparationRecette }}\n          ></div>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default PlatDetail;\n","import React from \"react\";\nimport { Container, Form, Button } from \"react-bootstrap\";\nimport { Redirect } from \"react-router\";\nimport { withRouter } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport PlatApiService from \"../../services/plats\";\nimport \"./styles/plat.scss\";\n\ntoast.configure();\n\nclass PlatForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      platId: null,\n      isFormValidated: false,\n      isPlatCreatedOrUpdated: false,\n      nom: \"\",\n      description: \"\",\n      ingredientsList: \"\",\n      preparationRecette: \"\",\n      photoUrl: \"\",\n    };\n\n    this.handleNomPlat = this.handleNomPlat.bind(this);\n    this.handleDescriptionPlat = this.handleDescriptionPlat.bind(this);\n    this.handleIngredientsPlat = this.handleIngredientsPlat.bind(this);\n    this.handlePreparationPlat = this.handlePreparationPlat.bind(this);\n    this.handlePhotoUrlPlat = this.handlePhotoUrlPlat.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    const platId = this.props.match.params.id;\n\n    if (!platId) {\n    } else {\n      this.setState({ platId });\n      try {\n        const platDetailResult = await PlatApiService.obtenirUnPlat(platId);\n        const {\n          nom,\n          description,\n          ingredientsList,\n          preparationRecette,\n          photoUrl,\n        } = platDetailResult.data;\n        this.setState({\n          nom,\n          description,\n          ingredientsList,\n          preparationRecette,\n          photoUrl,\n        });\n      } catch (error) {\n        console.error(\"error : \" + error);\n        toast.error(\"Error : aucun Identifiant de plat fourni.\", {\n          position: toast.POSITION.TOP_RIGHT,\n        });\n      }\n    }\n  }\n\n  setFormValidated = (isValidated) => {\n    this.setState({ isFormValidated: isValidated });\n  };\n\n  handleNomPlat = (e) => {\n    this.setState({ nom: e.target.value });\n  };\n\n  handleDescriptionPlat = (e) => {\n    this.setState({ description: e.target.value });\n  };\n\n  handleIngredientsPlat = (e) => {\n    this.setState({ ingredientsList: e.target.value });\n  };\n\n  handlePreparationPlat = (e) => {\n    this.setState({ preparationRecette: e.target.value });\n  };\n\n  handlePhotoUrlPlat = (e) => {\n    this.setState({ photoUrl: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.setFormValidated(true);\n\n    const {\n      platId,\n      nom,\n      description,\n      ingredientsList,\n      preparationRecette,\n      photoUrl,\n    } = this.state;\n    const platData = {\n      nom,\n      description,\n      ingredientsList,\n      preparationRecette,\n      photoUrl,\n    };\n    if (!nom || !description || !photoUrl) {\n      toast.error(\n        \"Certains champs du formulaire sont invalides! Veuillez vérifier vos entrées svp.\",\n        {\n          position: toast.POSITION.TOP_RIGHT,\n        }\n      );\n    } else {\n      try {\n        let statusMessage = null;\n\n        // modification de plat\n        if (platId) {\n          PlatApiService.modifierPlat(platId, platData);\n          statusMessage =\n            \"Plat modifié avec succès! Merci de recharger la page si la modification se voie pas\";\n        } else {\n          // ajout de nouveau plat\n          PlatApiService.ajouterNouveauPlat(platData);\n          statusMessage =\n            \"Nouveau plat ajouté avec succès! Merci de recharger la page si le plat s'affiche\";\n        }\n        toast.success(statusMessage, {\n          position: toast.POSITION.TOP_RIGHT,\n        });\n        this.setState({ isPlatCreatedOrUpdated: true });\n      } catch (error) {\n        toast.error(\n          \"Error lors de l'ajout/modification du plat! Veuillez recommencer svp.\",\n          {\n            position: toast.POSITION.TOP_RIGHT,\n          }\n        );\n        this.setState({ isPlatCreatedOrUpdated: false });\n      }\n    }\n  };\n\n  renderFormHeader() {\n    const { platId } = this.state;\n    return (\n      <div>\n        {platId ? <h2>Modification de plat </h2> : <h2>Ajout de plat</h2>}\n        <hr />\n      </div>\n    );\n  }\n\n  renderFormBody() {\n    const {\n      platId,\n      nom,\n      description,\n      ingredientsList,\n      preparationRecette,\n      photoUrl,\n    } = this.state;\n\n    return (\n      <div className=\"\">\n        <div className=\"\">\n          <Form\n            className=\"login-form\"\n            noValidate\n            validated={this.state.isFormValidated}\n            onSubmit={this.handleSubmit}\n          >\n            <Form.Group controlId=\"validation1\">\n              <Form.Label>Nom du plat*</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                name=\"nomPlat\"\n                placeholder=\"Nom du plat\"\n                value={nom}\n                onChange={this.handleNomPlat}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                Veuillez entrer un nom du plat valide.\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group controlId=\"validation2\">\n              <Form.Label>Description du plat*</Form.Label>\n              <Form.Control\n                required\n                as=\"textarea\"\n                rows=\"3\"\n                placeholder=\"Description du plat\"\n                value={description}\n                onChange={this.handleDescriptionPlat}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                Veuillez entrer une description du plat valide.\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group controlId=\"validation3\">\n              <Form.Label>Url de la photo du plat*</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Url de la photo du plat\"\n                value={photoUrl}\n                onChange={this.handlePhotoUrlPlat}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                Veuillez entrer une url valide de la photo du plat.\n              </Form.Control.Feedback>\n            </Form.Group>\n            <br />\n            <h5>\n              Informations sur la préparation de la recette{\" \"}\n              <small>(optionnelles)</small>\n            </h5>\n            <hr />\n            <Form.Group>\n              <Form.Label>List des ingrédients</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows=\"5\"\n                placeholder=\"List des ingrédients\"\n                value={ingredientsList}\n                onChange={this.handleIngredientsPlat}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Préparation du plat</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows=\"10\"\n                placeholder=\"Préparation du plat\"\n                value={preparationRecette}\n                onChange={this.handlePreparationPlat}\n              />\n            </Form.Group>\n            <Button\n              className=\"btn btn-warning\"\n              size=\"lg\"\n              type=\"submit\"\n              onClick={this.handleSubmit}\n            >\n              {platId ? \"Modifier\" : \"Ajouter\"}\n            </Button>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n\n  renderFormContent() {\n    return (\n      <Container className=\"container plat-form-container\">\n        {this.renderFormHeader()}\n        {this.renderFormBody()}\n      </Container>\n    );\n  }\n\n  render() {\n    if (this.state.isPlatCreatedOrUpdated) return <Redirect to=\"/nos-plats\" />;\n    return this.renderFormContent();\n  }\n}\n\nexport default withRouter(PlatForm);\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Accueil from \"./components/Accueil/Accueil\";\nimport PlatsList from \"./components/Plats/List\";\nimport PlatDetail from \"./components/Plats/PlatDetail\";\nimport PlatForm from \"./components/Plats/PlatForm\";\n\nfunction Routage() {\n  return (\n    <div className=\"\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Accueil} />\n          <Route path=\"/nos-plats\" component={PlatsList} />\n          <Route path=\"/plat/:id\" component={PlatDetail} />\n          <Route path=\"/ajouter-plat\" component={PlatForm} />\n          <Route path=\"/modifier-plat/:id\" component={PlatForm} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default Routage;\n","import React from \"react\";\nimport NavigationBar from \"./components/NavigationBar\";\nimport Footer from \"./components/Footer\";\nimport Routage from \"./Routage\";\n\nfunction App() {\n  return (\n    <div className=\"\">\n      <NavigationBar />\n      <Routage />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport 'react-toastify/dist/ReactToastify.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}